/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Mon Nov 13 23:01:00 2017. */

#ifndef PB_SORECOPROTOCOL_PB_H_INCLUDED
#define PB_SORECOPROTOCOL_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _ResponseType {
    ResponseType_OK = 200,
    ResponseType_ERROR = 404
} ResponseType;
#define _ResponseType_MIN ResponseType_OK
#define _ResponseType_MAX ResponseType_ERROR
#define _ResponseType_ARRAYSIZE ((ResponseType)(ResponseType_ERROR+1))

/* Struct definitions */
typedef struct _WifiConfigMessage {
    bool has_ssid;
    char ssid[32];
    bool has_password;
    char password[64];
/* @@protoc_insertion_point(struct:WifiConfigMessage) */
} WifiConfigMessage;

typedef struct _Protocol {
    pb_size_t which_payload;
    union {
        ResponseType Response;
        WifiConfigMessage WifiConfig;
    } payload;
/* @@protoc_insertion_point(struct:Protocol) */
} Protocol;

/* Default values for struct fields */

/* Initializer values for message structs */
#define WifiConfigMessage_init_default           {false, "", false, ""}
#define Protocol_init_default                    {0, {(ResponseType)0}}
#define WifiConfigMessage_init_zero              {false, "", false, ""}
#define Protocol_init_zero                       {0, {(ResponseType)0}}

/* Field tags (for use in manual encoding/decoding) */
#define WifiConfigMessage_ssid_tag               1
#define WifiConfigMessage_password_tag           2
#define Protocol_Response_tag                    1
#define Protocol_WifiConfig_tag                  5

/* Struct field encoding specification for nanopb */
extern const pb_field_t WifiConfigMessage_fields[3];
extern const pb_field_t Protocol_fields[3];

/* Maximum encoded size of messages (where known) */
#define WifiConfigMessage_size                   100
#define Protocol_size                            102

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SORECOPROTOCOL_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
